{"version":3,"sources":["../../src/pages/samples/samples.module.ts","../../src/pages/samples/samples.ts","../../node_modules/orbit-controls-es6/src/index.js"],"names":[],"mappings":"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,OAAO;;AAEP;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA,OAAO;;AAEP;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,sCAAsC;AACtC;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,mDAAmD;;AAEnD;;AAEA;;AAEA;;AAEA;AACA,kDAAkD;;AAElD;;AAEA;;AAEA;;AAEA;AACA,gDAAgD;;AAEhD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA","file":"5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SamplesPage } from './samples';\n\n\n//import { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  declarations: [\n    SamplesPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SamplesPage),\n    //ComponentsModule\n  ],\n  exports: [\n    SamplesPage,\n  ]\n})\nexport class SamplesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/samples/samples.module.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { IonicPage, NavController, NavParams, PopoverController } from 'ionic-angular';\nimport { PopoverComponent } from \"../../components/popover/popover\";\nimport * as THREE from 'three';\nimport OrbitControls from 'orbit-controls-es6';\n//import { Duct } from '../../models/interfaces/duct.interface';\nimport { Segment } from '../../models/objects/segment';\nimport { Reduction } from '../../models/objects/reduction';\nimport { Transiction } from '../../models/objects/transiction';\n\n@IonicPage()\n@Component({\n  selector: 'page-samples',\n  templateUrl: 'samples.html'\n})\n\nexport class SamplesPage {\n\n  /**\n    ********************* THREE.JS SESSION *****************************\n    */\n\n   @ViewChild('domObj') canvasEl: ElementRef;\n\n   protected selectedItem: any;\n   protected static _ELEMENT: any;\n   protected static _SCENE: any;\n   protected static _CAMERA: any;\n   protected static _RENDERER: any;\n   protected static _GRID: any;\n   protected static _AXIS: any;\n   protected static _CONTROLS: any;\n   protected static _LIGHT: any;\n\n   protected static _DUCT: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public popoverCtrl: PopoverController) {\n\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n  }\n\n  presentPopover(myevent) {\n    let popover = this.popoverCtrl.create(PopoverComponent, {\n      scene: SamplesPage._SCENE\n    });\n    popover.present({\n      ev: myevent\n    });\n  }\n\n  ionViewDidLoad() {\n\n    this.initialiseWebGLObjectAndEnvironment();\n    this.renderAnimation();\n\n  }\n\n  initialiseWebGLObjectAndEnvironment() : void\n  {\n\n     // Reference the DOM element that the WebGL generated object\n     // will be assigned to\n     SamplesPage._ELEMENT = this.canvasEl.nativeElement;\n\n     // Define a new ThreeJS scene\n     SamplesPage._SCENE = new THREE.Scene();\n\n     SamplesPage._CAMERA = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\n\n     // Define an object to manage display of ThreeJS scene\n     SamplesPage._RENDERER = new THREE.WebGLRenderer({ antialias: true });\n     //It sets the background color\n     SamplesPage._RENDERER.setClearColor(0xDCDCDC, 1);\n\n     // Resizes the output canvas to match the supplied width/height parameters\n     SamplesPage._RENDERER.setSize( window.innerWidth, window.innerHeight );\n\n\n     // Attach the canvas, where the renderer draws the scene, to the specified DOM element\n     SamplesPage._ELEMENT.appendChild( SamplesPage._RENDERER.domElement );\n\n     SamplesPage._GRID = new THREE.GridHelper(60, 60);\n     SamplesPage._AXIS = new THREE.AxesHelper(35);\n\n     var pointLight = new THREE.PointLight( 0xf2f2f2, 1, 100 );\n     pointLight.position.set( 0, 20, 0 );\n     SamplesPage._SCENE.add( pointLight );\n\n     var sphereSize = 1;\n     var pointLightHelper = new THREE.PointLightHelper( pointLight, sphereSize );\n     SamplesPage._SCENE.add( pointLightHelper );\n\n\n     SamplesPage._LIGHT  = new THREE.AmbientLight( 0x404040 ); // soft white light\n\n     // Add the object to the scene\n     SamplesPage._SCENE.add( SamplesPage._GRID );\n     SamplesPage._SCENE.add( SamplesPage._AXIS );\n     SamplesPage._SCENE.add( SamplesPage._LIGHT );\n\n     //Add the mouse controlls into the scene\n     SamplesPage._CONTROLS  = new OrbitControls(SamplesPage._CAMERA, SamplesPage._RENDERER.domElement);\n     SamplesPage._CONTROLS.enabled = true;\n     SamplesPage._CONTROLS.maxDistance = 1500;\n     SamplesPage._CONTROLS.minDistance = 0;\n     SamplesPage._CAMERA.position.set( 0, 20, 55 );\n     SamplesPage._CONTROLS.update();\n  }\n\n\n  /**\n    * Define the animation properties for the WebGL object rendered in the DOM element, using the requestAnimationFrame\n    * method to animate the object\n    *\n    */\n   private _animate () : void\n   {\n      requestAnimationFrame(() => {\n         this._animate();\n      });\n\n      SamplesPage._CONTROLS.update();\n\n      // Render the scene (will be called using the requestAnimationFrame method to ensure the cube is constantly animated)\n      SamplesPage._RENDERER.render(SamplesPage._SCENE, SamplesPage._CAMERA);\n   };\n\n\n   renderAnimation() : void {\n\n      this._animate();\n\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/samples/samples.ts","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n/**\n@author update Silvio Paganini\n*/\n\n// Update to support ES6 Threjs module importer\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nimport {\n  Vector3,\n  MOUSE,\n  Quaternion,\n  Spherical,\n  Vector2,\n  OrthographicCamera,\n  PerspectiveCamera,\n  EventDispatcher,\n} from 'three';\n\nexport default class OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n\n    this.object = object;\n\n    this.domElement = (domElement !== undefined) ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      ORBIT: MOUSE.LEFT,\n      ZOOM: MOUSE.MIDDLE,\n      PAN: MOUSE.RIGHT\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n\n      return spherical.phi;\n\n    };\n\n    this.getAzimuthalAngle = function() {\n\n      return spherical.theta;\n\n    };\n\n    this.reset = function() {\n\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function() {\n\n      var offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n\n      return function update() {\n\n        var position = scope.object.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n\n          rotateLeft(getAutoRotationAngle());\n\n        }\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n        // restrict theta to be between desired limits\n        spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n        spherical.makeSafe();\n\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n        // move target to panned location\n        scope.target.add(panOffset);\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n\n          sphericalDelta.theta *= (1 - scope.dampingFactor);\n          sphericalDelta.phi *= (1 - scope.dampingFactor);\n\n        } else {\n\n          sphericalDelta.set(0, 0, 0);\n\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n          scope.dispatchEvent(changeEvent);\n\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n\n          return true;\n\n        }\n\n        return false;\n\n      };\n\n    }();\n\n    this.dispose = function() {\n\n      scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n      scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n      scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n      scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n      scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n      scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n      document.removeEventListener('mousemove', onMouseMove, false);\n      document.removeEventListener('mouseup', onMouseUp, false);\n\n      window.removeEventListener('keydown', onKeyDown, false);\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n\n    var changeEvent = {\n      type: 'change'\n    };\n    var startEvent = {\n      type: 'start'\n    };\n    var endEvent = {\n      type: 'end'\n    };\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n    }\n\n    function getZoomScale() {\n\n      return Math.pow(0.95, scope.zoomSpeed);\n\n    }\n\n    function rotateLeft(angle) {\n\n      sphericalDelta.theta -= angle;\n\n    }\n\n    function rotateUp(angle) {\n\n      sphericalDelta.phi -= angle;\n\n    }\n\n    var panLeft = function() {\n\n      var v = new Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n\n      };\n\n    }();\n\n    var panUp = function() {\n\n      var v = new Vector3();\n\n      return function panUp(distance, objectMatrix) {\n\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n\n      };\n\n    }();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = function() {\n\n      var offset = new Vector3();\n\n      return function pan(deltaX, deltaY) {\n\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n        if (Object.getPrototypeOf(scope.object).isPerspectiveCamera) {\n\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n\n        } else if (Object.getPrototypeOf(scope.object).isOrthographicCamera) {\n\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n\n        } else {\n\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n\n        }\n\n      };\n\n    }();\n\n    function dollyIn(dollyScale) {\n\n      if (Object.getPrototypeOf(scope.object).isPerspectiveCamera) {\n\n        scale /= dollyScale;\n\n      } else if (Object.getPrototypeOf(scope.object).isOrthographicCamera) {\n\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n\n      } else {\n\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n\n      }\n\n    }\n\n    function dollyOut(dollyScale) {\n\n      if (Object.getPrototypeOf(scope.object).isPerspectiveCamera) {\n\n        scale *= dollyScale;\n\n      } else if (Object.getPrototypeOf(scope.object).isOrthographicCamera) {\n\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n\n      } else {\n\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n\n      }\n\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n\n      //console.log( 'handleMouseDownRotate' );\n\n      rotateStart.set(event.clientX, event.clientY);\n\n    }\n\n    function handleMouseDownDolly(event) {\n\n      //console.log( 'handleMouseDownDolly' );\n\n      dollyStart.set(event.clientX, event.clientY);\n\n    }\n\n    function handleMouseDownPan(event) {\n\n      //console.log( 'handleMouseDownPan' );\n\n      panStart.set(event.clientX, event.clientY);\n\n    }\n\n    function handleMouseMoveRotate(event) {\n\n      //console.log( 'handleMouseMoveRotate' );\n\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n\n    }\n\n    function handleMouseMoveDolly(event) {\n\n      //console.log( 'handleMouseMoveDolly' );\n\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n\n        dollyIn(getZoomScale());\n\n      } else if (dollyDelta.y < 0) {\n\n        dollyOut(getZoomScale());\n\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n\n    }\n\n    function handleMouseMovePan(event) {\n\n      //console.log( 'handleMouseMovePan' );\n\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n\n    }\n\n    function handleMouseUp(event) {\n\n      // console.log( 'handleMouseUp' );\n\n    }\n\n    function handleMouseWheel(event) {\n\n      // console.log( 'handleMouseWheel' );\n\n      if (event.deltaY < 0) {\n\n        dollyOut(getZoomScale());\n\n      } else if (event.deltaY > 0) {\n\n        dollyIn(getZoomScale());\n\n      }\n\n      scope.update();\n\n    }\n\n    function handleKeyDown(event) {\n\n      //console.log( 'handleKeyDown' );\n\n      switch (event.keyCode) {\n\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n      }\n\n    }\n\n    function handleTouchStartRotate(event) {\n\n      //console.log( 'handleTouchStartRotate' );\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    }\n\n    function handleTouchStartDolly(event) {\n\n      //console.log( 'handleTouchStartDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n\n    }\n\n    function handleTouchStartPan(event) {\n\n      //console.log( 'handleTouchStartPan' );\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    }\n\n    function handleTouchMoveRotate(event) {\n\n      //console.log( 'handleTouchMoveRotate' );\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n\n    }\n\n    function handleTouchMoveDolly(event) {\n\n      //console.log( 'handleTouchMoveDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n\n        dollyOut(getZoomScale());\n\n      } else if (dollyDelta.y < 0) {\n\n        dollyIn(getZoomScale());\n\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n\n    }\n\n    function handleTouchMovePan(event) {\n\n      //console.log( 'handleTouchMovePan' );\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n\n    }\n\n    function handleTouchEnd(event) {\n\n      //console.log( 'handleTouchEnd' );\n\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n\n        if (scope.enableRotate === false) return;\n\n        handleMouseDownRotate(event);\n\n        state = STATE.ROTATE;\n\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n\n      } else if (event.button === scope.mouseButtons.PAN) {\n\n        if (scope.enablePan === false) return;\n\n        handleMouseDownPan(event);\n\n        state = STATE.PAN;\n\n      }\n\n      if (state !== STATE.NONE) {\n\n        document.addEventListener('mousemove', onMouseMove, false);\n        document.addEventListener('mouseup', onMouseUp, false);\n\n        scope.dispatchEvent(startEvent);\n\n      }\n\n    }\n\n    function onMouseMove(event) {\n\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (state === STATE.ROTATE) {\n\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n\n      } else if (state === STATE.DOLLY) {\n\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n\n      } else if (state === STATE.PAN) {\n\n        if (scope.enablePan === false) return;\n\n        handleMouseMovePan(event);\n\n      }\n\n    }\n\n    function onMouseUp(event) {\n\n      if (scope.enabled === false) return;\n\n      handleMouseUp(event);\n\n      document.removeEventListener('mousemove', onMouseMove, false);\n      document.removeEventListener('mouseup', onMouseUp, false);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n\n    }\n\n    function onMouseWheel(event) {\n\n      if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(startEvent); // not sure why these are here...\n      scope.dispatchEvent(endEvent);\n\n    }\n\n    function onKeyDown(event) {\n\n      if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n      handleKeyDown(event);\n\n    }\n\n    function onTouchStart(event) {\n\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n\n        case 1: // one-fingered touch: rotate\n\n          if (scope.enableRotate === false) return;\n\n          handleTouchStartRotate(event);\n\n          state = STATE.TOUCH_ROTATE;\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n\n          if (scope.enableZoom === false) return;\n\n          handleTouchStartDolly(event);\n\n          state = STATE.TOUCH_DOLLY;\n\n          break;\n\n        case 3: // three-fingered touch: pan\n\n          if (scope.enablePan === false) return;\n\n          handleTouchStartPan(event);\n\n          state = STATE.TOUCH_PAN;\n\n          break;\n\n        default:\n\n          state = STATE.NONE;\n\n      }\n\n      if (state !== STATE.NONE) {\n\n        scope.dispatchEvent(startEvent);\n\n      }\n\n    }\n\n    function onTouchMove(event) {\n\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n\n        case 1: // one-fingered touch: rotate\n\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n          handleTouchMoveRotate(event);\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n          handleTouchMoveDolly(event);\n\n          break;\n\n        case 3: // three-fingered touch: pan\n\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n          handleTouchMovePan(event);\n\n          break;\n\n        default:\n\n          state = STATE.NONE;\n\n      }\n\n    }\n\n    function onTouchEnd(event) {\n\n      if (scope.enabled === false) return;\n\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n\n    }\n\n    function onContextMenu(event) {\n\n      event.preventDefault();\n\n    }\n\n    //\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n    scope.domElement.addEventListener('mousedown', onMouseDown, false);\n    scope.domElement.addEventListener('wheel', onMouseWheel, false);\n\n    scope.domElement.addEventListener('touchstart', onTouchStart, false);\n    scope.domElement.addEventListener('touchend', onTouchEnd, false);\n    scope.domElement.addEventListener('touchmove', onTouchMove, false);\n\n    window.addEventListener('keydown', onKeyDown, false);\n\n    // force an update at start\n\n    this.update();\n\n  };\n\n\n  get center() {\n    console.warn('OrbitControls: .center has been renamed to .target');\n    return this.target;\n  }\n\n  // backward compatibility\n\n  get noZoom() {\n\n      console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n  }\n\n  set noZoom(value) {\n    console.warn('OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n    this.enableZoom = !value;\n  }\n\n  get noRotate() {\n    console.warn('OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n    return !this.enableRotate;\n  }\n\n  set noRotate(value) {\n    console.warn('OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n    this.enableRotate = !value;\n  }\n\n  get noPan() {\n    console.warn('OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n    return !this.enablePan;\n  }\n\n  set noPan(value) {\n    console.warn('OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n    this.enablePan = !value;\n  }\n\n  get noKeys() {\n    console.warn('OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n    return !this.enableKeys;\n  }\n\n  set noKeys(value) {\n    console.warn('OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n    this.enableKeys = !value;\n  }\n\n  get staticMoving() {\n    console.warn('OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n    return !this.enableDamping;\n  }\n\n  set staticMoving(value) {\n    console.warn('OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n    this.enableDamping = !value;\n  }\n\n  get dynamicDampingFactor() {\n    console.warn('OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n    return this.dampingFactor;\n\n  }\n\n  set dynamicDampingFactor(value) {\n    console.warn('OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n    this.dampingFactor = value;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/orbit-controls-es6/src/index.js\n// module id = 562\n// module chunks = 5"],"sourceRoot":""}